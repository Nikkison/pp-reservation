// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reservation.proto

/*
Package reservation is a generated protocol buffer package.

It is generated from these files:
	reservation.proto

It has these top-level messages:
	ReservationResponse
	ReservationRequest
*/
package reservation

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// messageはデータ型（型 プロパティ名 = プロパティID で定義する）
// 基本予約情報
type ReservationResponse struct {
	// 予約受付ID
	ReservationId int32 `protobuf:"varint,1,opt,name=reservation_id,json=reservationId" json:"reservation_id,omitempty"`
	// 予約者名
	SubscriberName string `protobuf:"bytes,2,opt,name=subscriber_name,json=subscriberName" json:"subscriber_name,omitempty"`
	// 訪問者名
	VisitorName string `protobuf:"bytes,3,opt,name=visitor_name,json=visitorName" json:"visitor_name,omitempty"`
	// 部屋ID
	RoomId int32 `protobuf:"varint,4,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	// 時間帯
	TimeZone string `protobuf:"bytes,5,opt,name=time_zone,json=timeZone" json:"time_zone,omitempty"`
}

func (m *ReservationResponse) Reset()                    { *m = ReservationResponse{} }
func (m *ReservationResponse) String() string            { return proto.CompactTextString(m) }
func (*ReservationResponse) ProtoMessage()               {}
func (*ReservationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ReservationResponse) GetReservationId() int32 {
	if m != nil {
		return m.ReservationId
	}
	return 0
}

func (m *ReservationResponse) GetSubscriberName() string {
	if m != nil {
		return m.SubscriberName
	}
	return ""
}

func (m *ReservationResponse) GetVisitorName() string {
	if m != nil {
		return m.VisitorName
	}
	return ""
}

func (m *ReservationResponse) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *ReservationResponse) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

// 予約リクエスト情報
type ReservationRequest struct {
	ReservationId int32 `protobuf:"varint,1,opt,name=reservation_id,json=reservationId" json:"reservation_id,omitempty"`
}

func (m *ReservationRequest) Reset()                    { *m = ReservationRequest{} }
func (m *ReservationRequest) String() string            { return proto.CompactTextString(m) }
func (*ReservationRequest) ProtoMessage()               {}
func (*ReservationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReservationRequest) GetReservationId() int32 {
	if m != nil {
		return m.ReservationId
	}
	return 0
}

func init() {
	proto.RegisterType((*ReservationResponse)(nil), "reservation.ReservationResponse")
	proto.RegisterType((*ReservationRequest)(nil), "reservation.ReservationRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Reservation service

type ReservationClient interface {
	// 予約受付IDから予約情報を返却します
	GetReservation(ctx context.Context, in *ReservationRequest, opts ...grpc.CallOption) (*ReservationResponse, error)
}

type reservationClient struct {
	cc *grpc.ClientConn
}

func NewReservationClient(cc *grpc.ClientConn) ReservationClient {
	return &reservationClient{cc}
}

func (c *reservationClient) GetReservation(ctx context.Context, in *ReservationRequest, opts ...grpc.CallOption) (*ReservationResponse, error) {
	out := new(ReservationResponse)
	err := grpc.Invoke(ctx, "/reservation.Reservation/GetReservation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Reservation service

type ReservationServer interface {
	// 予約受付IDから予約情報を返却します
	GetReservation(context.Context, *ReservationRequest) (*ReservationResponse, error)
}

func RegisterReservationServer(s *grpc.Server, srv ReservationServer) {
	s.RegisterService(&_Reservation_serviceDesc, srv)
}

func _Reservation_GetReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationServer).GetReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reservation.Reservation/GetReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationServer).GetReservation(ctx, req.(*ReservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reservation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reservation.Reservation",
	HandlerType: (*ReservationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetReservation",
			Handler:    _Reservation_GetReservation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reservation.proto",
}

func init() { proto.RegisterFile("reservation.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xb1, 0x4e, 0x86, 0x30,
	0x14, 0x85, 0x53, 0xf5, 0x47, 0xb9, 0x28, 0xc6, 0x3a, 0x48, 0x74, 0x10, 0x49, 0x8c, 0x4c, 0x0c,
	0x3a, 0xfa, 0x00, 0x86, 0xc5, 0xa1, 0x6e, 0x2e, 0x84, 0xca, 0x1d, 0x3a, 0xb4, 0x17, 0xdb, 0xc2,
	0xe0, 0xc3, 0xf9, 0x6c, 0x86, 0x4a, 0x42, 0x8d, 0x31, 0x71, 0xbc, 0x5f, 0xbe, 0x9b, 0x73, 0x72,
	0xe0, 0xcc, 0xa2, 0x43, 0x3b, 0xf7, 0x5e, 0x91, 0x69, 0x46, 0x4b, 0x9e, 0x78, 0x16, 0xa1, 0xea,
	0x93, 0xc1, 0xb9, 0xd8, 0x6e, 0x81, 0x6e, 0x24, 0xe3, 0x90, 0xdf, 0x42, 0x1e, 0x69, 0x9d, 0x1a,
	0x0a, 0x56, 0xb2, 0x7a, 0x27, 0x4e, 0x22, 0xda, 0x0e, 0xfc, 0x0e, 0x4e, 0xdd, 0x24, 0xdd, 0x9b,
	0x55, 0x12, 0x6d, 0x67, 0x7a, 0x8d, 0xc5, 0x5e, 0xc9, 0xea, 0x54, 0xe4, 0x1b, 0x7e, 0xee, 0x35,
	0xf2, 0x1b, 0x38, 0x9e, 0x95, 0x53, 0x9e, 0x56, 0x6b, 0x3f, 0x58, 0xd9, 0xca, 0x82, 0x72, 0x01,
	0x87, 0x96, 0x48, 0x2f, 0x59, 0x07, 0x21, 0x2b, 0x59, 0xce, 0x76, 0xe0, 0x57, 0x90, 0x7a, 0xa5,
	0xb1, 0xfb, 0x20, 0x83, 0xc5, 0x2e, 0x3c, 0x1e, 0x2d, 0xe0, 0x95, 0x0c, 0x56, 0x8f, 0xc0, 0x7f,
	0xf4, 0x7f, 0x9f, 0xd0, 0xf9, 0x7f, 0xd6, 0xbf, 0x97, 0x90, 0x45, 0xcf, 0xfc, 0x05, 0xf2, 0x27,
	0xf4, 0x31, 0xb9, 0x6e, 0xe2, 0xfd, 0x7e, 0x07, 0x5d, 0x96, 0x7f, 0x0b, 0xdf, 0x4b, 0xca, 0x24,
	0xac, 0xfe, 0xf0, 0x15, 0x00, 0x00, 0xff, 0xff, 0x01, 0x44, 0x4f, 0x2a, 0x8a, 0x01, 0x00, 0x00,
}
